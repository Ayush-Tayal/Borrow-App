{"version":3,"sources":["firebase.js","db.js","Components/SignIn/SignIn.js","Components/Borrow/Borrow.js","Components/FourOFour/FourOFour.js","Components/Navbar/Navbar.js","Components/Home/Home.js","Components/Dashboard/Dashboard.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","borrowRequest","borrowAmount","borrowReason","borrowDuration","borrowUpiID","ref","push","SignIn","history","useHistory","useState","name","setName","phoneNo","setPhoneNo","otp","setOtp","useRef","useEffect","current","focus","err","confiCaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","onSignInSubmit","e","preventDefault","phoneNumber","console","log","appVerifier","signInWithPhoneNumber","then","confirmationResult","alert","catch","localStorage","getItem","to","className","type","required","value","placeholder","spellCheck","onChange","target","onSubmit","id","code","confirm","result","registerUsers","setItem","Borrow","setBorrowAmount","setBorrowReason","setBorrowDuration","setBorrowUpiID","users","setUsers","on","snapshot","chatUsers","forEach","snap","currUser","val","map","user","i","onClick","signOut","removeItem","error","FourOFour","Navbar","Home","Dashboard","requests","setRequests","allRequests","currRequest","req","App","userPhone","PrivateRoute","Component","path","render","props","exact","component","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.209f566b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCzUqJjRTxgoJblrJVLkIQk-L8_3CTwuXk\",\r\n  authDomain: \"borrow-app-94790.firebaseapp.com\",\r\n  projectId: \"borrow-app-94790\",\r\n  storageBucket: \"borrow-app-94790.appspot.com\",\r\n  messagingSenderId: \"332649218689\",\r\n  appId: \"1:332649218689:web:78c322b1b416751a388380\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const database = firebase.database();\r\n\r\n\r\nexport default firebase;","import {database} from \"./firebase\";\r\n\r\nexport function registerUsers (name, phoneNo) {\r\n    database.ref(\"users\").push({\r\n        name:name,\r\n        phoneNo:phoneNo\r\n    });\r\n}\r\n\r\nexport function borrowRequest(borrowAmount, borrowReason,borrowDuration,borrowUpiID){\r\n    database.ref(\"borrowReq\").push({\r\n        borrowAmount : borrowAmount,\r\n        borrowReason : borrowReason,\r\n        borrowDuration : borrowDuration,\r\n        borrowUpiID : borrowUpiID\r\n    })\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport './SignIn.css'\r\nimport { useHistory,Redirect } from 'react-router';\r\nimport { registerUsers } from \"../../db\";\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [phoneNo, setPhoneNo] = useState(\"\");\r\n    const [otp, setOtp] = useState(\"\");\r\n    \r\n    const ref = useRef(\"\")\r\n\r\n    useEffect(() => {\r\n        try{\r\n            ref.current.focus();\r\n        }\r\n        catch(err){\r\n            // console.log(err);\r\n        }\r\n    }, [])\r\n\r\n    const confiCaptcha = () => {\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"sign-in-button\",    \r\n            {\r\n                size: \"invisible\",\r\n                callback: (response) => {\r\n                    onSignInSubmit();\r\n                },\r\n            }\r\n        );\r\n    };\r\n\r\n    const onSignInSubmit = (e) => {\r\n        e.preventDefault();\r\n        confiCaptcha();\r\n\r\n        const phoneNumber = \"+91\" + phoneNo;\r\n        console.log(\"Phone no is\", phoneNumber);\r\n\r\n        const appVerifier = window.recaptchaVerifier;\r\n        firebase.auth()\r\n        .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n        .then((confirmationResult) => {\r\n            window.confirmationResult = confirmationResult;\r\n            console.log(\"OTP sent\");\r\n            alert(\"OTP Sent\")\r\n        })\r\n        .catch((err) => {\r\n            alert(\"OTP Not Sent\")\r\n            console.log(\"OTP not sent\", err);\r\n        });\r\n    };\r\n\r\n    const onSubmitOTP = (e) => {\r\n        e.preventDefault();\r\n\r\n        const code = otp;\r\n        window.confirmationResult.confirm(code)\r\n        .then((result) => {\r\n            // const user = result.user;\r\n\r\n            registerUsers(name, phoneNo);\r\n            localStorage.setItem(\"userPhone\", phoneNo);\r\n            console.log(\"Verified\", history);\r\n            history.push('/borrow')\r\n            \r\n            \r\n        })\r\n\r\n        .catch((err) => {\r\n            alert(\"Invalid OTP\")\r\n            console.log(\"verification error\");\r\n        });\r\n    };\r\n    \r\n    if(localStorage.getItem(\"userPhone\")) {\r\n        return <Redirect to='/borrow'/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"signin\">\r\n                <h1>Existing Customer   </h1>\r\n\r\n                <div>\r\n                    <form className=\"inp\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            type = 'text'\r\n                            required\r\n                            value = {name}\r\n                            placeholder = 'Enter Your Name ...'\r\n                            ref={ref}\r\n                            spellCheck=\"false\"\r\n                            onChange = {(e) => {setName(e.target.value)} }\r\n                            />\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"inp\"> \r\n                    <div>\r\n                        <label>Gender</label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"radio\" value=\"Male\" name=\"gender\" /> Male\r\n                        <input type=\"radio\" value=\"Female\" name=\"gender\" /> Female\r\n                        <input type=\"radio\" value=\"Other\" name=\"gender\" /> Other\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    <form onSubmit={onSignInSubmit} >\r\n                        <div id=\"sign-in-button\"></div>\r\n                        <div className=\"inp\">\r\n                            <label> Phone Number </label>\r\n                            <input\r\n                                type = 'tel'\r\n                                value = {phoneNo}\r\n                                required\r\n                                placeholder=\"Enter Phone Number ...\"\r\n                                onChange={ (e) => setPhoneNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                            \r\n                        <div className=\"send-otp\"> <button>Send OTP</button> </div>\r\n                    </form>\r\n                </div>        \r\n            \r\n                <div>\r\n                    <form onSubmit={onSubmitOTP}>\r\n                        <div className=\"inp\"> \r\n                            <label> Enter OTP </label>\r\n                            <input\r\n                                type = 'number'\r\n                                required\r\n                                placeholder=\"Enter OTP ...\"\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                />\r\n                        </div>\r\n\r\n                        <div className=\"verify-otp\"> <button>Verify</button> </div>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport firebase, { database } from \"../../firebase\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { borrowRequest } from '../../db';\r\nimport './Borrow.css'\r\n\r\n\r\nconst Borrow = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [borrowAmount, setBorrowAmount] = useState(\"\")\r\n    const [borrowReason, setBorrowReason] = useState(\"\")\r\n    const [borrowDuration, setBorrowDuration] = useState(\"\")\r\n    const [borrowUpiID, setBorrowUpiID] = useState(\"\")\r\n    const [users, setUsers] = useState([])\r\n\r\n    const ref = useRef(\"\")\r\n\r\n    useEffect(() => {\r\n        try{\r\n            ref.current.focus();\r\n        }\r\n        catch(err){\r\n            // console.log(err);\r\n        }\r\n    }, [])\r\n\r\n    const handleSignOut = () => {\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            localStorage.removeItem(\"userPhone\");\r\n            history.push('/');\r\n            alert(\"Sign Out Successfully...\")\r\n            console.log(\"Sign Out\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error During SignOut\", error)\r\n        });\r\n    }\r\n\r\n    const handleBorrowRequest = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(borrowAmount && borrowDuration && borrowRequest && borrowUpiID )\r\n        {\r\n            borrowRequest(borrowAmount, borrowReason, borrowDuration, borrowUpiID)\r\n            history.push('/dashboard')\r\n        }  \r\n        else{\r\n            alert(\"Input Fields can't be empty \")\r\n        }    \r\n        // console.log(\"Request Raised\")\r\n    }\r\n\r\n    const readUsersFromDB=()=>{\r\n        database.ref(\"users\").on(\"value\", (snapshot)=>{\r\n            let chatUsers = []\r\n\r\n            snapshot.forEach((snap)=>{\r\n                const currUser = snap.val();\r\n                chatUsers.push({\r\n                    name:currUser.name,\r\n                    phoneNo:currUser.phoneNo    \r\n                });\r\n            })\r\n\r\n            console.log(\"all users\",chatUsers)\r\n            setUsers(chatUsers);\r\n            \r\n        })\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        readUsersFromDB();\r\n        \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='borrow-comp'>  \r\n            <div className='users'>\r\n                <h1>Current Users</h1>\r\n                {\r\n                    users ? \r\n                    <div>\r\n                        {users.map((user, i)=>\r\n                            <div className='user' key={i}>\r\n                                <li> {user.name} </li>\r\n                            </div> \r\n                        )}\r\n                    </div> \r\n                    : \r\n                    <h2>No Users Found</h2>\r\n                }\r\n            </div>\r\n            \r\n            <div className='borrow'>\r\n                <h1>REQUEST HERE</h1>\r\n                <form>\r\n                    <div className='borrow-fields'>\r\n                        <label> Borrow Amount </label>\r\n                        <input\r\n                            type = \"number\"\r\n                            value = {borrowAmount}\r\n                            placeholder = 'Enter the borrow amount'\r\n                            onChange = { (e) => {setBorrowAmount(e.target.value)} }\r\n                            ref = {ref}\r\n                            required\r\n                            />\r\n                    </div>\r\n\r\n                    <div className='borrow-fields'>\r\n                        <label> Borrow Reason </label>\r\n                        <input\r\n                            type = \"text\"\r\n                            value = {borrowReason}\r\n                            placeholder = 'Reason for Borrowing'\r\n                            onChange = { (e) => {setBorrowReason(e.target.value)} }\r\n                            required\r\n                            />\r\n                    </div>\r\n\r\n                    <div className='borrow-fields'>\r\n                        <label> Borrow Duration </label>\r\n                        <input\r\n                            type = \"text\" \r\n                            value = {borrowDuration}\r\n                            placeholder = 'Enter the Borrow Duration'\r\n                            onChange = { (e) => {setBorrowDuration(e.target.value)} }\r\n                            required\r\n                            />\r\n                    </div>\r\n\r\n                    <div className='borrow-fields'>\r\n                        <label> UPI ID </label>\r\n                        <input  \r\n                            value = {borrowUpiID}\r\n                            placeholder = 'Enter your UPI ID'\r\n                            onChange = { (e) => {setBorrowUpiID(e.target.value)} }\r\n                            required\r\n                            />\r\n                    </div>\r\n\r\n                    <div className='raise-request'>\r\n                        <button onClick={handleBorrowRequest}>Raise Borrow Request</button>\r\n                    </div>\r\n\r\n                    <div className=\"signout-btn\">\r\n                        <button onClick={handleSignOut}>Sign Out</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Borrow\r\n","import React from 'react'\r\n\r\nconst FourOFour = () => {\r\n    return (\r\n        <div>\r\n            <h1> OOPS.! Sommething Went Wrong...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourOFour\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    \r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to = '/'> <button className='home-btn'>Home</button> </Link>\r\n            <Link to = '/'> <h1>Borrow App</h1> </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className = \"home\" >\r\n            <h1>Borrow Money.?</h1>\r\n\r\n            <div className='apply-btn'>\r\n                <Link to = '/signin'>\r\n                    <button> Borrow Now </button>\r\n                </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport './Dashboard.css'\r\nimport firebase, { database } from \"../../firebase\";\r\n\r\nexport const Dashboard = () => {\r\n    const history = useHistory();\r\n    const [requests, setRequests] = useState([])\r\n    \r\n\r\n    const handleNewReq = () => {\r\n        history.push('/borrow');\r\n    }\r\n\r\n    const readRequestsFromDB = ()=> {\r\n        database.ref(\"borrowReq\").on(\"value\", (snapshot)=>{\r\n            let allRequests = []\r\n\r\n            snapshot.forEach((snap)=>{\r\n                const currRequest = snap.val();\r\n                allRequests.push({\r\n                    borrowAmount:currRequest.borrowAmount,\r\n                    borrowDuration:currRequest.borrowDuration,\r\n                    borrowReason:currRequest.borrowReason,\r\n                    borrowUpiID:currRequest.borrowUpiID\r\n                });\r\n            })\r\n\r\n            console.log(\"all users\",allRequests)\r\n            setRequests(allRequests);\r\n            \r\n        })\r\n    }\r\n\r\n    useEffect( ()=> {\r\n        readRequestsFromDB();\r\n    }, [])\r\n\r\n    const handleSignOut = () => {\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            localStorage.removeItem(\"userPhone\");\r\n            history.push('/');\r\n            alert(\"Sign Out Successfully...\")\r\n            console.log(\"Sign Out\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error During SignOut\", error)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className='dashboard'>\r\n            {\r\n                requests ? \r\n                <div className='requests'>\r\n                    <h1>All Requests</h1>\r\n\r\n                    <div className='details'>\r\n                    {   \r\n                        requests.map((req, i)=>\r\n                            <div className='req' key={i}>\r\n                                <li> Amount: {req.borrowAmount} </li>\r\n                                <li> Duration: {req.borrowDuration} </li>\r\n                                <li> Reason: {req.borrowReason} </li>\r\n                                <li> Upi ID: {req.borrowUpiID} </li>\r\n                            </div> \r\n                        )\r\n                    }\r\n                    </div>        \r\n                    \r\n                    <div className=\"signout-btn\">\r\n                        <button onClick={handleSignOut}>Sign Out</button>\r\n                    </div>\r\n                </div> \r\n                : \r\n                <h2>No Requests Found</h2>\r\n                        \r\n            }\r\n\r\n            <div className='raiseNewReq' >\r\n                <button onClick={handleNewReq}>Raise New Request</button>            \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport SignIn from './Components/SignIn/SignIn';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport Borrow from './Components/Borrow/Borrow';\nimport FourOFour from './Components/FourOFour/FourOFour'\nimport Navbar from './Components/Navbar/Navbar';\nimport Home from './Components/Home/Home';\nimport { Dashboard } from './Components/Dashboard/Dashboard';\n\nfunction App() {\n  // console.log(\"appJs\", userPhone)\n  let userPhone = localStorage.getItem(\"userPhone\");\n  \n  function PrivateRoute ({Component, path}) {\n    userPhone = localStorage.getItem(\"userPhone\");\n      return (\n        <Route \n        path={path}\n        render={(props)=> \n          userPhone? <Component {...props} /> : <Redirect to='/'/> \n        }\n        />\n      )\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar/>\n        \n        <Switch>\n          <Route exact path = '/' component = {Home}  /> \n          <Route exact path = '/signin' component = {SignIn}/>\n          <PrivateRoute exact path = '/borrow' Component = {Borrow}/>\n          <PrivateRoute exact path='/dashboard' Component={Dashboard} />\n          <Route component = {FourOFour} />\n        </Switch>\n\n      </Router>\n    \n    \n    \n    </>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}